// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// ===============================
model User {
  id          String    @id @default(cuid())
  name        String
  email       String    @unique
  password    String    // bcrypt hashed password
  role        Role      @default(OWNER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  blogs       Blog[]
  projects    Project[]
}

// Enum for Role
enum Role {
  OWNER
  USER
}


// ===============================
model Blog {
  id          String    @id @default(cuid())
  title       String
  slug        String    @unique
  content     String
  thumbnail   String?
  tags        String[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relation
  authorId    String
  author      User      @relation(fields: [authorId], references: [id])
}

// ===============================
model Project {
  id            String    @id @default(cuid())
  title         String
  slug          String    @unique
  description   String
  image         String?
  liveLink      String?
  githubLink    String?
  features      String[]
  technologies  String[]     // ðŸ‘ˆ new field added
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  ownerId       String
  owner         User      @relation(fields: [ownerId], references: [id])
}


// ===============================
model About {
  id          String    @id @default(cuid())
  name        String
  title       String?
  bio         String?
  email       String?
  phone       String?
  address     String?
  profileImg  String?
  skills      Skill[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}


model Skill {
  id        String   @id @default(cuid())
  name      String
  level     String? 
  aboutId   String
  about     About    @relation(fields: [aboutId], references: [id])
}